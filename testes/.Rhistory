ggplot
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv)+
geom_point(aes(x=data, y=variante))
ggplot(data=dados_csv)+
geom_density(aes(x=data, y=variante))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status, y=qc_status))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status), colors(TRUE))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status, y= ..count..))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
ggplot(data=dados_csv)+
geom_boxplot(aes(x=variante_pango_linux, y=cobertura_5x_linux))
install.packages(tidyverse)
install.packages('tidyverse')
library(tidyverse)
install.packages('rnaturalearth')
library(rnaturalearth)
install.packages('rnaturalearthhires')
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(ggbeeswarm)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
values <- c()
barplot(values)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = '#1b98e0')
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = '#1b98e0', horiz = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = '#1b98e0', horiz = TRUE, names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = '#1b98e0', names.arg = group)
barplot(data, col = c("#1b98e0", "#353436"), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS["a","b","c","d","e"]
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436")names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"),names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"), names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Cobertura 154", "Cobertura 155"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("L154", "L155"), fill =c("#1b98e0", "#353436"))
install.packages("ggplot2")
library("ggplot2")
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", ), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", "#9f2ea3"), beside = TRUE)
legend("topright", legend = c("L154", "L155", "L153"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", "#9f2ea3"), beside = TRUE)
legend("topright", legend = c("L154", "L155", "L153"), fill =c("#1b98e0", "#353436", "#9f2ea3"))
values <- c(94.5, 92.5, 66.5, 87.83)
barplot(values, col = c("#c92a1e", "#c4c035", "#25b334", "#197eb0"), beside = TRUE)
legend("topright", legend = c("NP", "PSS1", "PSS2", "PSS3"),
fill =c("#c92a1e", "#c4c035", "#25b334", "#197eb0"))
group <- LETTERS("A", "B")
group <- c("A", "B")
barplot(values, col = '#1b98e0', names.arg = group)
install.packages("plotly")
library("plotly")
import ggplot2::
import ggplot2
library ggplot2
library(ggplot2)
library(ggplot2)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(rlang)
ggplot(mpg, aes(displ, hwy, colour = class)) + geom_point()
library(ggplot2)
x <- rnorm(50)
y <- rnorm(50)
# Create a scatterplot
plot(x, y, main = "Scatterplot Example", xlab = "X-axis label", ylab = "Y-axis label", pch = 16, col = "blue")
lista < c(1, 2, 2, 3, 3, 3, 4, 4, 5)
lista <- c(1, 2, 2, 3, 3, 3, 4, 4, 5)
shapiro.test(lista)
DF_lista <- data.frame(lista)
View(DF_lista)
gplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
ggplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
library(ggplot2)
ggplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F)
setwd("./")
dados <- read.csv("input/scatterplot.csv", sep=";")
data("midwest", package = "ggplot2")
force(midwest)
print("Hello, world!")
install.packages("cli")
library(plotly)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(plotly)
install.packages("vctrs")
library(plotly)
remove.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(ggplot2)
x <- c(80, 90, 95, 99)
y <- c(2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
View(dados)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y")
library(scales)
library(scales)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "auto", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "auto", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
modelo <- lm(log(y) ~ log(x))
coeficientes <- coef(modelo)
coeficientes
y_pred <- exp(coeficientes[1]) * x^coeficientes[2]
y_pred
coeficientes
exp(coeficientes[1]) * 80^coeficientes[2]
exp(coeficientes[1]) * 1^coeficientes[2]
exp(coeficientes[1]) * 10^coeficientes[2]
exp(coeficientes[1]) * 100^coeficientes[2]
exp(coeficientes[1]) * 20^coeficientes[2]
exp(coeficientes[1]) * 30^coeficientes[2]
exp(coeficientes[1]) * 40^coeficientes[2]
exp(coeficientes[1]) * 50^coeficientes[2]
exp(coeficientes[1]) * 60^coeficientes[2]
exp(coeficientes[1]) * 70^coeficientes[2]
exp(coeficientes[1]) * 80^coeficientes[2]
exp(coeficientes[1]) * 90^coeficientes[2]
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 5892.333)
dados <- data.frame(X = x, Y = y)
View(dados)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ log(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 5892.333, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
exp(coeficientes[1]) * 95^coeficientes[2]
exp(coeficientes[1]) * 99^coeficientes[2]
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 4603.284, 5614.083, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 99, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 4603.284, 5614.083, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point(size = 4) +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point(size = 3) +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
setwd("Z:/servico-analise/testes")
setwd("Z:/001-ESCRITA DA DISSERTAÇÃO/Cleber/Analises estatisticas/ProSangue_estatistica_uni/Vacina/2020 - 2024")
library(ggplot2)
library(gridExtra)
library(ggplot2)
library(gridExtra)
dados <- read.csv("dados.csv", sep=";")
dados$igg_doses <- factor(dados$igg_doses,
levels = c("Sem vacina",
"1 dose",
"2 doses",
"3 doses",
"4 doses",
"5 doses"))
medianas <- aggregate(anticorpo/0.142/10000 ~ igg_doses, data = dados, FUN = median)
total_por_doses <- dados %>%
group_by(igg_doses) %>%
summarise(total = n())
total_por_doses <- dados %>%
group_by(igg_doses) %>%
summarise(total = n())
ggplot(dados, aes(x=(anticorpo/0.142)/10000, color=igg_doses, fill=igg_doses)) +
geom_histogram(alpha=1, binwidth = 5) +
scale_color_manual(values = c("#8b9dc3", "#419873", "#419873", "#419873","#398564", "#317256")) +
scale_fill_manual(values = c("#8b9dc3", "#52bf90", "#49ab81", "#419873","#398564", "#317256")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("IgG anti-S (x10000) (BAU/ml)") +
ylab("Quantitativo") +
facet_wrap(~igg_doses) +
guides(fill = FALSE) +
guides(color = FALSE) +
geom_text(data = total_por_doses, aes(label = paste("N = ", total)), x = Inf, y = Inf,
hjust = 1, vjust = 1, size = 7, color = "black")
ggplot(dados, aes(x=(anticorpo/0.142)/10000, color=igg_doses, fill=igg_doses)) +
geom_histogram(alpha=1, binwidth = 5) +
scale_color_manual(values = c("#8b9dc3", "#419873", "#419873", "#419873","#398564", "#317256")) +
scale_fill_manual(values = c("#8b9dc3", "#52bf90", "#49ab81", "#419873","#398564", "#317256")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("IgG anti-S (x10000) (BAU/ml)") +
ylab("Quantitativo") +
facet_wrap(~igg_doses) +
guides(fill = FALSE) +
guides(color = FALSE)
ggplot(data = dados, aes(x = igg_doses, y = (anticorpo/0.142)/10000, fill = igg_doses)) +
#ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
scale_fill_manual(values = c("#8b9dc3", "#419873", "#419873", "#419873","#419873", "#317256")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Doses da vacina") +
ylab("IgG anti-S (x10000) (BAU/ml)") +
guides(fill = FALSE) +
coord_cartesian(ylim = c(0, 40))
ggplot(data = dados, aes(x = igg_doses, y = (anticorpo/0.142)/10000, fill = igg_doses)) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
scale_fill_manual(values = c("#8b9dc3", "#419873", "#419873", "#419873","#419873", "#317256")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Doses da vacina") +
ylab("IgG anti-S (x10000) (BAU/ml)") +
guides(fill = FALSE) +
coord_cartesian(ylim = c(0, 40))
setwd("Z:/servico-analise/testes")
data(airquality)
dados <- data(airquality)
data(airquality)
head(airquality)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month))
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F)
airquality$Month <- as.factor(airquality$Month)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
scale_fill_manual(values = c("#BFEFFF", "#87CEFA", "#4682B4", "#4169E1","#0000FF")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("DMeses do ano") +
ylab("Concentração de ozônio (PPB)") +
guides(fill = FALSE)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
scale_fill_manual(values = c("#BFEFFF", "#87CEFA", "#4682B4", "#4169E1","#0000FF")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Meses do ano") +
ylab("Concentração de ozônio (PPB)") +
guides(fill = FALSE)
ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
scale_fill_manual(values = c("#BFEFFF", "#87CEFA", "#2196F3", "#4682B4", "#4169E1")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Meses do ano") +
ylab("Concentração de ozônio (PPB)") +
guides(fill = FALSE)
grafico <- ggplot(data = airquality, aes(x = Month, y = Ozone, fill = Month)) +
geom_violin(alpha = 1, position = position_dodge(width = 0.75), size = 1, color = NA) +
geom_boxplot(notch = F, outlier.size = -1, color = "black", lwd = 1, alpha = 0.7, show.legend = F) +
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F) +
scale_fill_manual(values = c("#BFEFFF", "#87CEFA", "#2196F3", "#4682B4", "#4169E1")) +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Meses do ano") +
ylab("Concentração de ozônio (PPB)") +
guides(fill = FALSE)
ggsave("Exemplo1.png", plot = grafico, width = 16, height = 8, dpi = 800)
data(NIR)
head(NIR)
data(airquality)
head(airquality)
ggplot(data = airquality, aes(x = Solar.R, y = Temp)) +
geom_point() +
theme(legend.position="none")
data(mtcars)
head(mtcars)
correlation_matrix <- cor(mtcars)
high_corr_pairs <- which(abs(correlation_matrix) == max(abs(correlation_matrix[lower.tri(correlation_matrix)])), arr.ind = TRUE)
high_corr_vars <- colnames(correlation_matrix)[high_corr_pairs]
print(high_corr_vars)
head(mtcars)
ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, size=cyl)) +
geom_point() +
theme(legend.position="none")
p <- ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, size=cyl)) +
geom_point() +
theme(legend.position="none")
p1 <- ggMarginal(p, type="histogram")
library(ggplot2)
library(ggExtra)
p <- ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, size=cyl)) +
geom_point() +
theme(legend.position="none")
p1 <- ggMarginal(p, type="histogram")
p1
ggMarginal(p, type="histogram") +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Consumo de combustível") +
ylab("Peso do carro") +
guides(fill = FALSE)
ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, size=cyl)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18)
) +
xlab("Consumo de combustível") +
ylab("Peso do carro") +
guides(fill = FALSE)
install.packages("BiocManager")
BiocManager::install("GEOquery")
library(GEOquery)
library(GEOquery)
gse <- getGEO("GSE9749", GSEMatrix = TRUE)
exprSet <- exprs(gse[[1]])
head(exprSet)
dados <- read.csv("dados.csv", sp=";")
dados <- read.csv("dados.csv", sp=";")
dados <- read.csv("dados.csv", sep=";")
View(dados)
ggplot(dados, aes(x=cobertura, y=profundidade_media, color=qualidade)) +
geom_point() +
theme(legend.position="none")
ggplot(dados, aes(x=profundidade_media, y=cobertura, color=qualidade)) +
geom_point() +
theme(legend.position="none")
p <- ggplot(dados, aes(x=profundidade_media, y=cobertura, color=qualidade)) +
geom_point() +
theme(legend.position="none")
p1 <- ggMarginal(p, type="histogram")
p1
ggplot(dados, aes(x=profundidade_media, y=cobertura, color=qualidade)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18),
legend.position="none"
) +
xlab("Profundidade média") +
ylab("Cobertura genômica")
ggplot(dados, aes(x=profundidade_media, y=cobertura, color=qualidade_geral)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18),
legend.position="none"
) +
xlab("Profundidade média") +
ylab("Cobertura genômica")
p <- ggplot(dados, aes(x=profundidade_media, y=cobertura, color=qualidade_geral)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18),
legend.position="none"
) +
xlab("Profundidade média") +
ylab("Cobertura genômica")
p1 <- ggMarginal(p, type="histogram")
p1
ggplot(dados, aes(x=profundidade_media, y=cobertura, color=resultado)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18),
legend.position="none"
) +
xlab("Profundidade média") +
ylab("Cobertura genômica")
p <- ggplot(dados, aes(x=profundidade_media, y=cobertura, color=resultado)) +
geom_point() +
theme(
axis.text = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold", size = 18),
legend.position="none"
) +
xlab("Profundidade média") +
ylab("Cobertura genômica")
p1 <- ggMarginal(p, type="histogram")
View(dados)
