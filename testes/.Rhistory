filter( price<300 )
price<-eixoX
price<-"eixox"
data
filter( price<300 )
xValue <- 1:10
yValue <- cumsum(rnorm(10))
data <- data.frame(xValue,yValue)
ggplot(data, aes(x=xValue, y=yValue)) +
geom_line()
ggplot2(data, aes(x=xValue, y=yValue)) +
geom_line()
vendas<-c(12,15,13,10)
vendas
vendas<-c(12,15,13,10)
objetos<-c('TV','fogao','refrigerador','carro')
vendas
objetos
vendas<-c(12,15,13,10)
objetos<-c('TV','fogao','refrigerador','carro')
vendas
objetos
vendas[0]
vendas[1]
objetos[0]
objetos[1]
vendas[c(1,4)]
vendas[1:3]
vendas[3]<-18
vendas
library(ggplot2)
p <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, position="fill") +
theme_ipsum()
install.packages("theme_ipsum", dependencies=TRUE)
install.packages("Theme_ipsum", dependencies=TRUE)
install.packages('ggbiplot')
install.packages('devtools')
library(devtools)
install_github('vqv/ggbiplot')
install_github('vqv/ggbiplot',force=TRUE)
install_github('vqv/ggplot2')
install_github('vqv/ggplot2')
install_github('vqv/theme_ipsum')
install_github('vqv/ggplot2', force=TRUE)
p <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, position="fill") +
theme_ipsum()
theme_ipsum()
p <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5, position="fill") +
p
p
p <- ggplot(data=diamonds, aes(x=5, group=cut, fill=cut)) +
geom_density(adjust=1.5, position="fill") +
theme_ipsum()
detach("package:grDevices", unload = TRUE)
detach("package:devtools", unload = TRUE)
library(dbplyr)
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
data %>%
tail(10) %>%
ggplot( aes(x=date, y=value)) +
geom_line() +
geom_point()
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
value <- runif(49, 10, 100)               # y Axis
group <- rep(LETTERS[1:7],times=7)        # group, one shape per group
data <- data.frame(time, value, group)
ggplot(data, aes(x=time, y=value, fill=group)) +
geom_area()
install.packages('readxl')
library(readxl)
dados<-read_excel('C:\Users\clebe\OneDrive\Área de Trabalho\Raspador_Gal\requisicoes.csv', sheet=1)
dados<-read_excel('C:/Users/clebe/OneDrive/Área de Trabalho\Raspador_Gal/requisicoes.csv', sheet=1)
dados<-read_excel('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', sheet=1)
dados<-read_excel('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.xlsx', sheet=1)
dados
dados[1]
dados<-read_excel('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.xlsx', sheet=1)
dados
dados[1]
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
view(dados_csv)
ggplot(data = dados_csv)
ggplot(data = dados_csv, aes(x=data_coleta, y=variantes))
ggplot(diamonds, aes(carat)) +
geom_density()
install.packages('ggplot2')
library(ggplot2)
library('ggplot2')
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
dados_csv
dados_csv[1]
dados_csv[2]
ggplot(data = dados_csv) +
geom_point(aes(x=idade, y=idade)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
ggplot(data = dados_csv) +
geom_point(aes(x=nome, y=idade)
ggplot
a<-ggplot(data = dados_csv) +
geom_point(aes(x=nome, y=idade)
a
a<-ggplot(data = dados_csv) +
geom_point(aes(x=nome, y=idade))
#Usando o ggplot:
a<-ggplot(data = dados_csv) +
geom_point(aes(x=nome, y=idade))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/Raspador_Gal/requisicoes.csv', stringsAsFactors = T)
dados_csv
a<-ggplot(data = dados_csv) +
geom_point(aes(x=nome, y=idade))
a
library(ggplot2)
library(dplyr)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/BasedeDados_Redcap_SARS-CoV-2.csv', stringsAsFactors = T)
dados_csv
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux))
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux,color))
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux),size=0.5)
ggplot(data=dados_csv)+
geom_density(aes(x=data_coleta_amostra, y=variante_pango_linux))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux),size=0.5)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux),size=0.5)
library('ggplot2')
library('dplyr')
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv) +
geom_point(aes(x=data_coleta_amostra, y=variante_pango_linux),size=0.5)
ggplot(data=dados_csv)+
geom_density(aes(x=data_coleta_amostra, y=variante_pango_linux))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv) +
geom_point(aes(x=data, y=variante))
library('ggplot2')
library('dplyr')
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv) +
geom_point(aes(x=data, y=variante))
ggplot(data = dados_csv)+
geom_point(aes(x=data, y=variante))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv)+
geom_point(aes(x=data, y=variante))
ggplot
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv)+
geom_point(aes(x=data, y=variante))
ggplot
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste.csv', stringsAsFactors = T)
ggplot(data = dados_csv)+
geom_point(aes(x=data, y=variante))
ggplot(data=dados_csv)+
geom_density(aes(x=data, y=variante))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status, y=qc_status))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status), colors(TRUE))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status, y= ..count..))
ggplot(data=dados_csv)+
geom_bar(aes(x=qc_status))
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
dados_csv<-read.csv2('C:/Users/clebe/OneDrive/Área de Trabalho/TestesR/teste2.csv', stringsAsFactors = T)
ggplot(data=dados_csv)+
geom_boxplot(aes(x=variante_pango_linux, y=cobertura_5x_linux))
install.packages(tidyverse)
install.packages('tidyverse')
library(tidyverse)
install.packages('rnaturalearth')
library(rnaturalearth)
install.packages('rnaturalearthhires')
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(ggbeeswarm)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
values <- c()
barplot(values)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = '#1b98e0')
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = '#1b98e0', horiz = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = '#1b98e0', horiz = TRUE, names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = '#1b98e0', names.arg = group)
barplot(data, col = c("#1b98e0", "#353436"), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS["a","b","c","d","e"]
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436")names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"),names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
group <- LETTERS[1:5]
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"), names.arg = group)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Group 1", "Group 2"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("Cobertura 154", "Cobertura 155"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#353436"), beside = TRUE)
legend("topright", legend = c("L154", "L155"), fill =c("#1b98e0", "#353436"))
install.packages("ggplot2")
library("ggplot2")
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", ), beside = TRUE)
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", "#9f2ea3"), beside = TRUE)
legend("topright", legend = c("L154", "L155", "L153"), fill =c("#1b98e0", "#353436"))
values <- c(0.4, 0.75, 0.2, 0.6, 0.5)
barplot(values, col = c("#1b98e0", "#ad1531", "#9f2ea3"), beside = TRUE)
legend("topright", legend = c("L154", "L155", "L153"), fill =c("#1b98e0", "#353436", "#9f2ea3"))
values <- c(94.5, 92.5, 66.5, 87.83)
barplot(values, col = c("#c92a1e", "#c4c035", "#25b334", "#197eb0"), beside = TRUE)
legend("topright", legend = c("NP", "PSS1", "PSS2", "PSS3"),
fill =c("#c92a1e", "#c4c035", "#25b334", "#197eb0"))
group <- LETTERS("A", "B")
group <- c("A", "B")
barplot(values, col = '#1b98e0', names.arg = group)
install.packages("plotly")
library("plotly")
import ggplot2::
import ggplot2
library ggplot2
library(ggplot2)
library(ggplot2)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library(rlang)
ggplot(mpg, aes(displ, hwy, colour = class)) + geom_point()
library(ggplot2)
x <- rnorm(50)
y <- rnorm(50)
# Create a scatterplot
plot(x, y, main = "Scatterplot Example", xlab = "X-axis label", ylab = "Y-axis label", pch = 16, col = "blue")
lista < c(1, 2, 2, 3, 3, 3, 4, 4, 5)
lista <- c(1, 2, 2, 3, 3, 3, 4, 4, 5)
shapiro.test(lista)
DF_lista <- data.frame(lista)
View(DF_lista)
gplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
ggplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
library(ggplot2)
ggplot(data = DF_lista) +
geom_histogram(aes(x = lista), bins = 30, fill = "blue", color = "black")
ggbeeswarm::geom_quasirandom(shape = 21, dodge.width = 0.75, color = "black", alpha = 0.5, show.legend = F)
setwd("./")
dados <- read.csv("input/scatterplot.csv", sep=";")
data("midwest", package = "ggplot2")
force(midwest)
print("Hello, world!")
install.packages("cli")
library(plotly)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(plotly)
install.packages("vctrs")
library(plotly)
remove.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(ggplot2)
x <- c(80, 90, 95, 99)
y <- c(2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
View(dados)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y")
library(scales)
library(scales)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "auto", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "auto", se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
modelo <- lm(log(y) ~ log(x))
coeficientes <- coef(modelo)
coeficientes
y_pred <- exp(coeficientes[1]) * x^coeficientes[2]
y_pred
coeficientes
exp(coeficientes[1]) * 80^coeficientes[2]
exp(coeficientes[1]) * 1^coeficientes[2]
exp(coeficientes[1]) * 10^coeficientes[2]
exp(coeficientes[1]) * 100^coeficientes[2]
exp(coeficientes[1]) * 20^coeficientes[2]
exp(coeficientes[1]) * 30^coeficientes[2]
exp(coeficientes[1]) * 40^coeficientes[2]
exp(coeficientes[1]) * 50^coeficientes[2]
exp(coeficientes[1]) * 60^coeficientes[2]
exp(coeficientes[1]) * 70^coeficientes[2]
exp(coeficientes[1]) * 80^coeficientes[2]
exp(coeficientes[1]) * 90^coeficientes[2]
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 5892.333)
dados <- data.frame(X = x, Y = y)
View(dados)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ log(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Valores de X", y = "Valores de Y") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 5892.333, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
exp(coeficientes[1]) * 95^coeficientes[2]
exp(coeficientes[1]) * 99^coeficientes[2]
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 4603.284, 5614.083, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
x <- c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 99, 80, 90, 95, 99)
y <- c(0.000001393135, 0.09060251, 2.547076, 17.93061, 71.60503, 209.5973, 504.0767,
1058.574, 2013.006, 3548.54, 4603.284, 5614.083, 2150, 3200, 4160, 6450)
dados <- data.frame(X = x, Y = y)
ggplot(dados, aes(x = X, y = Y)) +
geom_point() +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point(size = 4) +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
ggplot(dados, aes(x = X, y = Y)) +
geom_point(size = 3) +
#geom_smooth(method = "lm", formula = y ~ exp(x), se = FALSE) +
labs(title = "Gráfico de Dispersão", x = "Porcentagem de anticopos neutralizantes",
y = "IgG anti-S") +
scale_y_continuous(labels = comma)
setwd("Z:/servico-analise/testes")
map_data <- map_data("world")
library(maps)
library(maps)
map_data <- map_data("world")
library(mapdata)
library(mapdata)
install.packages("mapdata")
install.packages("mapdata")
library(mapdata)
library(mapdata)
map_data <- map_data("world")
map_data <- map_data("world")
library(tmap)
library(tmap)
library(ggplot2)
library(ggplot2)
dados <- read.csv("DATA_LOCATION_ALL.csv", sep=";")
View(dados)
dados <- read.csv("DATA_LOCATION_ALL.csv", sep=";")
head(dados)
library(ggplot2)
library(dplyr)
library(maps)
library(ggthemes)
library(ggplot2)
library(dplyr)
library(maps)
library(ggthemes)
dados_por_estado <- dados %>%
group_by(estado) %>%
summarise(count = n())
View(dados_por_estado)
brasil_map <- map_data("state")
dados_por_estado$estado <- tolower(dados_por_estado$estado)
unique(dados_por_estado$estado)
unique(brasil_map$region)
install.packages("brazilmaps")
install.packages("brazilmaps")
library(brazilmaps)
install.packages("brazilmaps")
dados <- read.csv("DATA_LOCATION_ALL.csv", sep=";")
head(dados)
install.packages("geobr")
library(geobr)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("sf")
install.packages("geobr")
install.packages("sf")
library(ggplot2)
library(dplyr)
library(sf)
library(geobr)
library(ggplot2)
library(dplyr)
library(sf)
library(geobr)
dados <- read.csv("DATA_LOCATION_ALL.csv", sep=";")
estados <- read_state(year = 2020)
View(estados)
dados_contagem <- dados %>%
group_by(estado) %>%
summarise(Count = n())
unique(dados$estado)
unique(estados$name_state)
dados <- read.csv("DATA_LOCATION_ALL.csv", sep=";")
estados <- read_state(year = 2020)
dados_contagem <- dados %>%
group_by(estado) %>%
summarise(Count = n())
unique(dados$estado)
unique(estados$name_state)
dados_contagem$estado <- tolower(dados_contagem$estado)
dados_contagem$estado <- iconv(dados_contagem$estado, from = "latin1", to = "UTF-8")
dados_contagem$estado <- tolower(dados_contagem$estado)
estados$name_state <- tolower(estados$name_state)
mapa_dados <- left_join(estados, dados_contagem, by = c("name_state" = "estado"))
ggplot(data = mapa_dados) +
geom_sf(aes(fill = Count), color = "black", size = 0.2) +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
theme_minimal() +
labs(title = "Distribuição de Casos por Estado",
fill = "Número de Casos")
mapa <- ggplot(data = mapa_dados) +
geom_sf(aes(fill = Count), color = "black", size = 0.2) +
scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey") +
theme_minimal() +
labs(title = "Distribuição de Casos por Estado",
fill = "Número de Casos")
ggsave(filename = "choropleth_map.png", plot = mapa, width = 10, height = 8, dpi = 300)
